import { useNavigate } from 'react-router-dom';
import css from './CourseCreateControl.module.scss';
import { useFetchCoursesQuery } from '../../../api/materialApi.ts';
import { SecondaryButton } from '../../../widgets/cancel-button/secondary-button.tsx';
import { MainButton } from '../../../widgets/button/button.tsx';

interface CourseCreateControlProps {
	onSave: () => void;
	mode: 'create' | 'update';
	courseId?: number;
}

export const CourseCreateControl = ({ onSave, mode, courseId }: CourseCreateControlProps) => {
	const navigate = useNavigate();
	const { refetch } = useFetchCoursesQuery();

	const onClose = async () => {
		try {
			await refetch(); // ‚úÖ –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∫—É—Ä—Å–æ–≤, –µ—Å–ª–∏ –Ω–∞–¥–æ
			if (mode === 'create') {
				navigate('/courses');
			} else if (mode === 'update' && courseId) {
				navigate(`/view-course/${courseId}`, {
					state: { forceRefetch: true } // üí° –ø–µ—Ä–µ–¥–∞–µ–º —Å–∏–≥–Ω–∞–ª
				});
			}
		} catch (error) {
			console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–µ —Å–ø–∏—Å–∫–∞:', error);
		}
	};

	return (
		<div className={css.wrapper}>
			<SecondaryButton text="–ó–∞–∫—Ä—ã—Ç—å" onClick={onClose} />
			<MainButton text="–°–æ—Ö—Ä–∞–Ω–∏—Ç—å" onClick={onSave} />
		</div>
	);
};